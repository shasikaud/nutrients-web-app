openapi: 3.0.3
info:
  title: Nutrients Calculator REST API Service
  description: >-
    This is a REST API service that provides nutrient information for a given food item.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Choreo
  url: https://choreo.dev
servers:
  - url: http://localhost:8080
tags:
  - name: nutrients
    description: nutrients calculator app
paths:
  /nutrients:
    summary: List all nutrients
    get:
      summary: List all nutrients
      operationId: ListAllnutrients
      tags:
        - nutrients
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringArray"
    post:
      summary: Insert a new calculation
      operationId: SetNewCalculation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid request body
      tags:
        - nutrients
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValue"

  /users:
    post:
      summary: Insert a new user
      operationId: SetNewUser
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid request body
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

  /users/login:
    post:
      summary: Login user
      operationId: LoginUser
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid request body
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

  /nutrients/{uuid}:
    summary: Get calculation by UUID
    get:
      tags:
        - nutrients
      summary: Get calculation by UUID
      operationId: GetcalculationByUUID
      parameters:
        - name: uuid
          in: path
          description: UUID of calculation to return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValue"
        "404":
          description: UUID not found
    delete:
      tags:
        - nutrients
      summary: Delete calculation by UUID
      description: Deletes a single calculation based on the UUID supplied
      operationId: DeletecalculationByUUID
      parameters:
        - name: uuid
          in: path
          description: UUID of calculation to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: ISBN not found
    put:
      tags:
        - nutrients
      summary: Update calculation status by UUID
      description: Updates the status of the calculation based on the UUID supplied
      operationId: UpdatenutrientstatusByUUID
      parameters:
        - name: uuid
          in: path
          description: UUID of calculation to update
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "404":
          description: UUID not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
  /healthz:
    summary: Healthcheck endpoint
    get:
      summary: Healthcheck
      operationId: Healthcheck
      responses:
        "200":
          description: Healthy response

components:
  schemas:
    Key:
      type: object
      properties:
        uuid:
          type: string
          example: "my-uuid"
    Status:
      type: object
      properties:
        status:
          type: string
          example: "read"
    KeyValue:
      type: object
      required:
        - title
        - author
        - status
      properties:
        title:
          type: string
          example: "my-title"
        author:
          type: string
          example: "my-author"
        status:
          type: string
          example: "read"
    StringArray:
      type: array
      items:
        type: string
    User:
      type: object
      properties:
        email:
          type: string
          example: "my-email"
        password:
          type: string
          example: "my-password"
